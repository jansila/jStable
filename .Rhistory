dyn.load()
?dlopen
??dlopen
library(myStable)
myStable::qstable(0.1)
require(Rcpp)
library(myStable)
myStable::qstable(0.1)
myStable::dstable(rnorm(500))
require(devtools)
require(roxygen2)
roxygenise()
library(myStable)
myStable::dstable(rnorm(500))
?useDynLib
??useDynLIb
??useDynLib
library(myStable)
myStable::dstable(rnorm(500))
x<-rnorm(1000)
dstable(x)
plot(x,dstable(x))
points(x,dnorm(x), col="red")
plot(x,myStable::dstable(x))
points(x,dnorm(x), col="red")
library(myStable)
pstable(x)
plot(x,pstable(x))
points(x,pnorm(x))
points(x,pnorm(x),col="red")
plot(x,pstable(x, tail=1.8))
points(x,pnorm(x),col="red")
qstable(x)
?qnorm
qnorm(seq(0.1,0.9,lenth.out=5))
qnorm(seq(0.1,0.9,length.out=5))
p<-seq(0,1,length.out=29)
o
p
qnorm(p)
plot(p,qnorm(p))
plot(qnorm(p),p)
qstable(p)
library(myStable)
qstable(p)
library(myStable)
qstable(p)
h
skew
ttamp
tamp
?uniroot2
??uniroot2
rstable(10)
stabledist::qstable(unif(10))
stabledist::qstable(unif(10),alpha=1.5,beta=1,gamma=0.1,delta=0)
stabledist::qstable(runif(10),alpha=1.5,beta=1,gamma=0.1,delta=0)
test<-function(x){x^2-10}
uniroot2(test,interval=c(0,50))
stabledist::qstable(seq(-infty,0.025,length.out = 100),alpha=1.5,beta=1,gamma=0.1,delta=0)
?infty
?infty
infty
Inf
-Inf
stabledist::qstable(seq(-Inf,0.025,length.out = 100),alpha=1.5,beta=1,gamma=0.1,delta=0)
stabledist::qstable(seq(-1e2,0.025,length.out = 100),alpha=1.5,beta=1,gamma=0.1,delta=0)
stabledist::qstable(seq(0,0.025,length.out = 100),alpha=1.5,beta=1,gamma=0.1,delta=0)
stabledist::qstable(seq(1e-5,0.025,length.out = 100),alpha=1.5,beta=1,gamma=0.1,delta=0)
stabledist::qstable(seq(1e-5,0.025,length.out = 500),alpha=1.5,beta=1,gamma=0.1,delta=0)
microbenchmark::microbenchmark(stabledist::qstable(seq(1e-5,0.025,length.out = 500),alpha=1.5,beta=1,gamma=0.1,delta=0))
?qcauchy
qstable(runif(10))
library(myStable)
qstable(runif(10))
library(myStable)
microbenchmark::microbenchmark(mean(stabledist::qstable(seq(1e-5,0.025,length.out = 1000),alpha=1.5,beta=1,gamma=0.1,delta=0)))
stableglm(rnorm(500))
library(myStable)
stableglm(rnorm(500))
library(myStable)
.qStableFit(rnorm(100))
.qStableFit
library(myStable)
myStable::.qStableFit(rnorm(100))
x<-rnorm(100)+rt(100,4)
x
plot(x)
hist(x)
plot(density(x))
myStable::.qStableFit(x)
library(myStable)
myStable::.qStableFit(x)
points(density(x))
q<-myStable::.qStableFit(x)
library(myStable)
q<-myStable::.qStableFit(x)
class(q$fit$estimate)
list(c(1:5))
list("a"=list(1:5))
t<-list("a"=list(1:5))
t$a
t$a[1]
t$a[[1]]
class(q$fit)
library(myStable)
q<-myStable::.qStableFit(x)
class(q$fit)
vec<-q$fit
vec$estimate
any(is.null(vec$estimate))
is.na(vec$estimate)
any(is.na(vec$estimate))
vec$estimate[1]
vec$estimate[2]
vec$estimate[3]
library(myStable)
denStable(x,vec=q$fit)
class(q$fit=="stableFit")
class(q$fit)=="stableFit"
library(myStable)
class(q$fit)=="stableFit"
denStable(x,vec=q$fit)
points(x,denStable(x,vec=q$fit),col="red")
plot(x,density(x)$y)
density(x)
density(x)[,2]
density(x)$y
str(density(x))
plot(x,dnorm(x))
points(x,denStable(x,vec=q$fit),col="red")
d<-denStable(x,vec=q$fit)
points(x,d)
plot(x,d)
plot(d,)
summary(d)
denStable(x)
x<-rnorm(500)
myStable::denStable(x)
myStable::denStable(x)
dnorm(x)
myStable::denStable(x)
alpha
beta
Q
library(myStable)
myStable::denStable(x)
myStable::denStable(x)
?dnorm
library(myStable)
myStable::denStable(x)
q$fit
cat("mrdko", 5)
library(myStable)
myStable::denStable(x,vec=q$fot)
myStable::denStable(x,vec=q$fit)
q$fit
library(myStable)
myStable::denStable(x,vec=q$fit)
alpha
beta
!is.null(vec)
is.null(vec)
is.null(vec)
class(vec)=="stableFit"
any(is.na(vec$estimate))
!any(is.na(vec$estimate))
library(myStable)
myStable::denStable(x,vec=q$fit)
alpha
beta
gamma
!any(is.na(vec$estimate))
is.na(vec$estimate)
all(is.na(vec$estimate))
any(is.na(vec$estimate))
!any(is.na(vec$estimate))
!any(is.na(vec$estimate))&&!is.null(vec)
!any(is.na(vec$estimate))&!is.null(vec)
vec$estimate[1]
p<-vec$estimate[1]
p
p<-c(vec$estimate[1])
p
p<-as.vector((vec$estimate[1])
)
p
library(myStable)
library(myStable)
myStable::denStable(x,vec=q$fit)
alpha
beta
alpha
q$fot
vec
myStable::denStable(x,vec=q$fit)
library(myStable)
myStable::denStable(x,vec=q$fit)
plot(x,myStable::denStable(x,vec=q$fit))
points(x,dnorm(x))
x<-rnorm(x)
x<-rnorm(500)
q<-.qStableFit(x)
plot(x,dnorm(x))
points(x, myStable::denStable(x,vec=q$fit))
points(x, myStable::denStable(x,vec=q$fit),col="red")
library(myStable)
plot(x, myStable::denStable(x,vec=q$fit),col="red")
points(x,dnorm(x))
x<-stabledist::rstable()
x<-stabledist::rstable(500,alpha=1.77,beta=-0.5,gamma=sqrt(2),delta=0)
x
plot(x,dnorm(x))
x<-stabledist::rstable(1000,alpha=1.77,beta=-0.5,gamma=sqrt(2),delta=0)
plot(x,stabledist::dstable(x,alpha=1.77,beta=-0.5,gamma=sqrt(2),delta=0))
points(x,denStable(x,alpha=1.77,beta=-0.5,gamma=sqrt(2),delta=0))
plot(x,stabledist::dstable(x,alpha=1.77,beta=-0.5,gamma=sqrt(2),delta=0))
points(x,denStable(x,alpha=1.77,beta=-0.5,gamma=sqrt(2),delta=0),col="red")
microbenchmark::microbenchmark(stabledist::dstable(rnorm(5000),alpha=1.89,beta=0.78,gamm=sqrt(3),delta=0),denStable(rnorm(5000), alpha=1.89,beta=0.78,delta=sqrt(3),gamma=sqrt(3),delta=0), times=50)
microbenchmark::microbenchmark(stabledist::dstable(rnorm(5000),alpha=1.89,beta=0.78,gamma=sqrt(3),delta=0),denStable(rnorm(5000), alpha=1.89,beta=0.78,delta=sqrt(3),gamma=sqrt(3),delta=0), times=50)
microbenchmark::microbenchmark(stabledist::dstable(rnorm(5000),alpha=1.89,beta=0.78,gamma=sqrt(3),delta=0),denStable(rnorm(5000), alpha=1.89,beta=0.78,gamma=sqrt(3),delta=0), times=50)
9853/64
plot(x,dnorm9x)
plot(x,dnorm(x))
.mleStableFit(x)
?nlminb
obj = function(x, y , trace = FALSE) {
f = -mean(log(denStable(y,
alpha = x[1], beta = x[2], gamma = x[3], delta = x[4])))
# Print Iteration Path:
if (trace) {
cat("\n Objective Function Value:  ", -f)
cat("\n Stable Estimate:           ", x)
cat("\n")
}
f
}
alpha
alpha=1.8
beta=0
gamma=0.7
delta=0
hist(x)
r <- nlminb(
objective = obj,
start = c(alpha, beta, gamma, delta),
lower = c( eps, -1+eps, 0+eps, -Inf),
upper = c(2-eps, 1-eps,  Inf,  Inf),
y = y, control = control, trace = trace)
r <- nlminb(
objective = obj,
start = c(alpha, beta, gamma, delta),
lower = c( eps, -1+eps, 0+eps, -Inf),
upper = c(2-eps, 1-eps,  Inf,  Inf),
y = y, trace = trace)
eps = 1e-4
r <- nlminb(
objective = obj,
start = c(alpha, beta, gamma, delta),
lower = c( eps, -1+eps, 0+eps, -Inf),
upper = c(2-eps, 1-eps,  Inf,  Inf),
y = y, trace = trace)
y<-x
# Minimization:
eps = 1e-4
r <- nlminb(
objective = obj,
start = c(alpha, beta, gamma, delta),
lower = c( eps, -1+eps, 0+eps, -Inf),
upper = c(2-eps, 1-eps,  Inf,  Inf),
y = y, trace = trace)
trace=FALSE
eps = 1e-4
r <- nlminb(
objective = obj,
start = c(alpha, beta, gamma, delta),
lower = c( eps, -1+eps, 0+eps, -Inf),
upper = c(2-eps, 1-eps,  Inf,  Inf),
y = y, trace = trace)
r
y<-rnorm(500)
eps = 1e-4
r <- nlminb(
objective = obj,
start = c(alpha, beta, gamma, delta),
lower = c( eps, -1+eps, 0+eps, -Inf),
upper = c(2-eps, 1-eps,  Inf,  Inf),
y = y, trace = trace)
r
?nlminb
microbenchmark::microbenchmark(    r <- nlminb(
objective = obj,
start = c(alpha, beta, gamma, delta),
lower = c( 1, -1+eps, 0+eps, -Inf),
upper = c(2-eps, 1-eps,  Inf,  Inf),
y = y, trace = trace), times=5)
library(myStable)
stableFit(x,type="mle")
stableFit(x,type="mle",doplot=FALSE)
library(myStable)
stableFit(x,type="mle",doplot=FALSE)
.mleStableFit(x)
str(.qStableFitx)
str(.qStableFit(x))
library(myStable)
.mleStableFit(x)
library(myStable)
.mleStableFit(x)
1/sqrt(2)
library(myStable)
microbenchmark::microbenchmark(fBasics::stableFit(rnorm(500)+rt(500,3),type="mle", doplot=F,trace=F),myStable::.mleStableFit(rnorm(500)+rt(500,3)),times=20L)
111501/858
library(myStable)
fBasics::stableFit(rnorm(50))
d<-fBasics::stableFit(rnorm(50))
str(d)
d@fit
d<-fBasics::stableFit(rnorm(50),type="mle")
d@fit$code
d@fit$code
.mleStableFit(rnorm(50))
.mleStableFit(rnorm(50))
d<-.mleStableFit(rnorm(50))
d
library(myStable)
require(tawny)
install.packages("tawny")
proc.time()
a<-proc.time()
proc.time()-a
str(proc.time()-a)
k<-proc.time()-a
k[1]
require(tawny)
data("sp500")
data("sp500.subset")
dim(sp500.subset)
data("sp500.subset")
hist(rcauchy(200)()
)
hist(rcauchy(200))
require(tawny)
data("sp500.subset")
rnorm<-rnorm(500)
rt<-rt(500,4)
rcauchy<-rcauchy(500)
testingData<-matrix(cbind(rnorm,rt,rcauchy,sp500.subset))
data("sp500.subset")
rnorm<-rnorm(500)
rt<-rt(500,4)
rcauchy<-rcauchy(500)
testingData<-matrix(cbind(rnorm,rt,rcauchy,sp500.subset))
data("sp500.subset")
rnorm<-rnorm(200)
rt<-rt(200,4)
rcauchy<-rcauchy(200)
testingData<-matrix(cbind(rnorm,rt,rcauchy,sp500.subset))
testingData<-matrix(cbind(rnorm,rt,rcauchy,as.matrix(sp500.subset)))
testingData<-matrix(cbind(rnorm,rt,rcauchy,as.matrix(sp500.subset,nrow=200)))
testingData<-matrix(cbind(rnorm,rt,rcauchy,as.matrix(sp500.subset,nrow=200)),nrow=200)
comp<-apply(testingData,2,testMLE)
comp
.mleStableFit(rnorm(100))
.mleStableFit(rnorm(100),trace=T)
.mleStableFit(rnorm(100))
alpha
betya
beta
y
y==x
x
x
y
vec
alpha
bea
beta
init
d
.qStableFit(rnorm(50))
.qStableFit(rnorm(100))
dnorm
rm(list=ls())
5+4
?dyn.load
is.loaded("stable")
is.loaded("stable.so")
search()
library(myStable)
library(myStable)
library(myStable)
library(jStable)
load("~/Desktop/Dissertation/myPack/tested jStable.RData")
sp500.subset[,9]
denStable(sp500.subset[,9],vec=mleFit(sp500.subset[,9])$fit)
plot(sp500.subset[,9],denStable(sp500.subset[,9],vec=mleFit(sp500.subset[,9])$fit))
x<-sp500.subset[,9]
points(x,dnorm(x,mean=mean(x),sd=sd(x)))
points(x,dnorm(x,mean=mean(x),sd=sd(x)),col="red")
require(ggplot)
require(ggplot2)
x<-data.frame(x=x)
x
ggplot(x,aes(x))+geom_histogram()
dens<-(x=x,density=denStable(x,vec=mleFit(x)$fit))
dens<-data.frame(x=x,density=denStable(x,vec=mleFit(x)$fit))
dens<-data.frame("x"=as.vector(x),"density"=denStable(x,vec=mleFit(x)$fit))
data.frame(x)
data.frame(x,denStable(x,vec=mleFit(x)$fit))
str(x)
dens<-data.frame("x"=as.vector(x$x),"density"=denStable(x,vec=mleFit(x)$fit))
d<-x$x
dens<-data.frame("x"=d,"density"=denStable(x,vec=mleFit(x)$fit))
dens<-data.frame(d.denStable(d,vec=mleFit(d)$fit))
dens<-data.frame(d,denStable(d,vec=mleFit(d)$fit))
dens
ggplot(x,aes(x))+geom_histogram()+geom_point(data=dens,aes(x=d,y=denStable))
require(roxygen2)
?roxygenise
getwd()
roxygenise()
